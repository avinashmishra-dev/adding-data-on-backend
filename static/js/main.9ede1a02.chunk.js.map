{"version":3,"sources":["Components/Fetching&Storing/ProductList.module.css","Components/Fetching&Storing/ProductData.module.css","Components/Button/Button.js","Components/Fetching&Storing/ProductData.js","Components/Fetching&Storing/Products.js","Components/Fetching&Storing/ProductList.js","firebase.js","App.js","index.js"],"names":["module","exports","Button","props","onClick","onFetch","className","children","ProductData","onSubmit","updateProductField","currentProduct","event","preventDefault","classes","field","htmlFor","id","type","value","name","onChange","target","price","description","Product","onDeleteHandler","bind","Products","rows","columns","editHandler","striped","bordered","hover","map","column","prod","onUpdateHandler","ProductList","useState","products","setProducts","setCurrentProduct","fetchProducts","useCallback","loadedProducts","firebase","database","ref","get","then","snapshot","exists","responseData","val","key","push","a","foundProductPos","findIndex","product","alert","remove","tempProducts","splice","catch","error","message","foundProduct","find","console","log","set","useEffect","Fragment","card","title","createProduct","res","err","updatedProduct","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","ReactDOM","render","document","getElementById"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,6B,mBCA3DD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,gBAAgB,qC,yKCGvFC,EAJA,SAACC,GACd,OAAO,wBAAQC,QAASD,EAAME,QAASC,UAAU,aAA1C,SAAwDH,EAAMI,Y,iBCsDxDC,EApDK,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,SAAUC,EAAyC,EAAzCA,mBAAoBC,EAAqB,EAArBA,eACnD,OACE,uBACEF,SAAU,SAACG,GACTA,EAAMC,iBACNJ,KAEFH,UAAS,oEALX,UAOE,sBAAKA,UAAS,UAAKQ,IAAQC,MAAb,wBAAd,UACE,uBAAOC,QAAQ,OAAf,0BACA,uBACEC,GAAG,OACHC,KAAK,OACLZ,UAAU,6BACVa,OAAqB,OAAdR,QAAc,IAAdA,OAAA,EAAAA,EAAgBS,OAAQ,GAC/BC,SAAU,SAACT,GACTF,EAAmB,OAAQE,EAAMU,OAAOH,aAI9C,sBAAKb,UAAS,UAAKQ,IAAQC,MAAb,uBAAd,UACE,uBAAOC,QAAQ,QAAf,2BACA,uBACEC,GAAG,QACHC,KAAK,OACLZ,UAAU,6BACVa,OAAqB,OAAdR,QAAc,IAAdA,OAAA,EAAAA,EAAgBY,QAAS,GAChCF,SAAU,SAACT,GACTF,EAAmB,QAASE,EAAMU,OAAOH,aAI/C,sBAAKb,UAAS,UAAKQ,IAAQC,MAAb,wBAAd,UACE,uBAAOC,QAAQ,cAAf,iCACA,uBACEC,GAAG,cACHC,KAAK,OACLZ,UAAU,6BACVa,OAAqB,OAAdR,QAAc,IAAdA,OAAA,EAAAA,EAAgBa,cAAe,GACtCH,SAAU,SAACT,GACTF,EAAmB,cAAeE,EAAMU,OAAOH,aAIrD,qBAAKb,UAAU,OAAf,SACE,cAAC,EAAD,2B,QC7CFmB,EAAU,SAACtB,GACf,OACE,qCACE,6BAAKA,EAAMiB,OACX,6BAAKjB,EAAMoB,QACX,6BAAKpB,EAAMqB,cACX,6BAKE,cAAC,EAAD,CAAQnB,QAASF,EAAMuB,gBAAgBC,K,UAAWxB,EAAMc,IAAxD,0BAsCOW,EA9BE,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,QAASJ,EAAmC,EAAnCA,gBAAiBK,EAAkB,EAAlBA,YAClD,OACE,eAAC,IAAD,CAAsBC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA5C,UACE,gCACE,oCACGJ,QADH,IACGA,OADH,EACGA,EAASK,KAAI,SAACC,EAAQnB,GAAT,OACZ,6BAAcmB,GAALnB,UAIf,uCACGY,QADH,IACGA,OADH,EACGA,EAAMM,KAAI,SAACE,GACV,OACE,6BACE,cAAC,EAAD,CACEpB,GAAIoB,EAAKpB,GACTG,KAAMiB,EAAKjB,KACXG,MAAOc,EAAKd,MACZC,YAAaa,EAAKb,YAClBE,gBAAiBA,EACjBY,gBAAiBP,KAPZM,EAAKpB,a,yBC6FXsB,MAzHf,WACE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4CF,mBAAS,IAArD,mBAAO7B,EAAP,KAAuBgC,EAAvB,KA2BMC,EAAgBC,uBAAY,WAChC,IAAIC,EAAiB,GACPC,IAASC,WAAWC,IAAI,YAChCC,MAAMC,MAAK,SAACC,GAChB,GAAIA,EAASC,SAAU,CACrB,IAAMC,EAAeF,EAASG,MAC9B,IAAK,IAAMC,KAAOF,EAChBR,EAAeW,KAAK,CAClBxC,GAAIuC,EACJpC,KAAMkC,EAAaE,GAAKpC,KACxBG,MAAO+B,EAAaE,GAAKjC,MACzBC,YAAa8B,EAAaE,GAAKhC,cAGnCkB,EAAYI,QAEZJ,EAAY,SAGf,IAhDkB,4CAsDrB,WAA6BzB,GAA7B,eAAAyC,EAAA,0DAE2B,KADnBC,EAAkBlB,EAASmB,WAAU,SAACC,GAAD,OAAaA,EAAQ5C,KAAOA,MADzE,uBAGI6C,MAAM,oBAHV,0BAMgBf,IAASC,WAAWC,IAAI,YAAchC,GAEjD8C,SACAZ,MAAK,WACJ,IAAMa,EAAY,YAAOvB,GACzBuB,EAAaC,OAAON,EAAiB,GACrCjB,EAAY,YAAIsB,OAEjBE,OAAM,SAAUC,GACfL,MAAM,oBAAD,OACiBrB,EAASkB,GAAiBvC,KAD3C,uBAC8D+C,EAAMC,QADpE,uBAfX,4CAtDqB,kEA2ErB,WAA2BnD,GAA3B,eAAAyC,EAAA,sDAEQW,EAAe5B,EAAS6B,MAAK,SAACT,GAAD,OAAaA,EAAQ5C,KAAOA,KAC/DsD,QAAQC,IAAIH,GAEV1B,EADE0B,EACgB,eAAKA,GAEL,MAPtB,4CA3EqB,kEAsFrB,WAA6BR,GAA7B,SAAAH,EAAA,sDACEX,IAASC,WAAWC,IAAI,YAAYQ,OAAOgB,IAAIZ,GADjD,4CAtFqB,sBAkGrB,OAhDAa,qBAAU,WACR9B,MACC,CAACA,IA+CF,eAAC,IAAM+B,SAAP,WACE,0BAASrE,UAAS,UAAKQ,IAAQ8D,MAA/B,UACE,mBAAGtE,UAAS,UAAKQ,IAAQ+D,OAAzB,yBACA,cAAC,EAAD,CACEpE,SA5FkB,WAErBE,EAAeS,MACfT,EAAeY,OACfZ,EAAea,aAfC,2CAmBnBsD,CAAcnE,GACXwC,MAAK,SAAC4B,GACLnC,IACAD,EAAkB,OAEnBuB,OAAM,SAACc,GACNT,QAAQC,IAAIQ,EAAIZ,aA+EdzD,eAAgBA,EAChBD,mBAfmB,SAACK,EAAOI,GACjC,IAAM8D,EAAc,2BACftE,GADe,kBAEjBI,EAAQI,IAEXwB,EAAkBsC,SAahB,0BAAS3E,UAAS,UAAKQ,IAAQ8D,MAA/B,UACE,mBAAGtE,UAAS,UAAKQ,IAAQ+D,MAAb,QAAZ,sBACA,cAAC,EAAD,CACE/C,QA3GQ,CACd,eACA,gBACA,sBACA,UAwGMD,KAAMY,EACNf,gBAjHa,4CAkHbK,YAlHa,qD,MCIXgB,EAASmC,cAVN,CACbC,OAAQ,0CACRC,WAAY,+BACZC,YAAa,mDACbC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,cACnBC,MAAO,6CCEMC,MARf,WACE,OACE,+BACE,cAAC,EAAD,O,MCCNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9ede1a02.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"ProductList_card__3gZLc\",\"title\":\"ProductList_title__3z0qY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProductData_form__3n_D2\",\"field\":\"ProductData_field__2-U6_\",\"product-input\":\"ProductData_product-input__1UJFe\"};","const Button = (props) => {\r\n  return <button onClick={props.onFetch} className=\"custom-btn\">{props.children}</button>;\r\n};\r\n\r\nexport default Button;\r\n","import Button from \"../Button/Button\";\r\nimport classes from \"./ProductData.module.css\";\r\n\r\nconst ProductData = ({ onSubmit, updateProductField, currentProduct }) => {\r\n  return (\r\n    <form\r\n      onSubmit={(event) => {\r\n        event.preventDefault();\r\n        onSubmit();\r\n      }}\r\n      className={`d-flex flex-column align-items-center justify-content-center px-4`}\r\n    >\r\n      <div className={`${classes.field}  d-flex flex-column`}>\r\n        <label htmlFor=\"name\">Product name</label>\r\n        <input\r\n          id=\"name\"\r\n          type=\"text\"\r\n          className=\"custom-input product-input\"\r\n          value={currentProduct?.name || \"\"}\r\n          onChange={(event) => {\r\n            updateProductField(\"name\", event.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className={`${classes.field} d-flex flex-column`}>\r\n        <label htmlFor=\"price\">Product price</label>\r\n        <input\r\n          id=\"price\"\r\n          type=\"text\"\r\n          className=\"custom-input product-input\"\r\n          value={currentProduct?.price || \"\"}\r\n          onChange={(event) => {\r\n            updateProductField(\"price\", event.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className={`${classes.field}  d-flex flex-column`}>\r\n        <label htmlFor=\"description\">Product description</label>\r\n        <input\r\n          id=\"description\"\r\n          type=\"text\"\r\n          className=\"custom-input product-input\"\r\n          value={currentProduct?.description || \"\"}\r\n          onChange={(event) => {\r\n            updateProductField(\"description\", event.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"my-4\">\r\n        <Button>Submit</Button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProductData;\r\n","// import classes from './Product.module.css'\r\nimport Button from \"../Button/Button\";\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\n\r\nconst Product = (props) => {\r\n  return (\r\n    <>\r\n      <td>{props.name}</td>\r\n      <td>{props.price}</td>\r\n      <td>{props.description}</td>\r\n      <td>\r\n        {/* <Button onFetch={props.onUpdateHandler.bind(this, props.id)}>\r\n          edit\r\n        </Button>\r\n        / */}\r\n        <Button onFetch={props.onDeleteHandler.bind(this, props.id)}>\r\n          delete\r\n        </Button>\r\n      </td>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Products = ({ rows, columns, onDeleteHandler, editHandler }) => {\r\n  return (\r\n    <ReactBootStrap.Table striped bordered hover>\r\n      <thead>\r\n        <tr>\r\n          {columns?.map((column, id) => (\r\n            <th key={id}>{column}</th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {rows?.map((prod) => {\r\n          return (\r\n            <tr key={prod.id}>\r\n              <Product\r\n                id={prod.id}\r\n                name={prod.name}\r\n                price={prod.price}\r\n                description={prod.description}\r\n                onDeleteHandler={onDeleteHandler}\r\n                onUpdateHandler={editHandler}\r\n              />\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </ReactBootStrap.Table>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\n\r\nimport React from \"react\";\r\nimport ProductData from \"./ProductData\";\r\nimport Products from \"./Products\";\r\nimport classes from \"./ProductList.module.css\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction ProductList() {\r\n  const [products, setProducts] = useState([]);\r\n  const [currentProduct, setCurrentProduct] = useState({});\r\n\r\n  const columns = [\r\n    \"Product Name\",\r\n    \"Product price\",\r\n    \"Product Description\",\r\n    \"Action\",\r\n  ];\r\n\r\n  const addProductHandler = () => {\r\n    if (\r\n      !currentProduct.name ||\r\n      !currentProduct.price ||\r\n      !currentProduct.description\r\n    ) {\r\n      return;\r\n    }\r\n    createProduct(currentProduct)\r\n      .then((res) => {\r\n        fetchProducts();\r\n        setCurrentProduct({});\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  const fetchProducts = useCallback(() => {\r\n    let loadedProducts = [];\r\n    const dbRef = firebase.database().ref(\"products\");\r\n    dbRef.get().then((snapshot) => {\r\n      if (snapshot.exists()) {\r\n        const responseData = snapshot.val();\r\n        for (const key in responseData) {\r\n          loadedProducts.push({\r\n            id: key,\r\n            name: responseData[key].name,\r\n            price: responseData[key].price,\r\n            description: responseData[key].description,\r\n          });\r\n        }\r\n        setProducts(loadedProducts);\r\n      } else {\r\n        setProducts([]);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, [fetchProducts]);\r\n\r\n  async function deleteHandler(id) {\r\n    const foundProductPos = products.findIndex((product) => product.id === id);\r\n    if (foundProductPos === -1) {\r\n      alert(\"Invalid product.\");\r\n      return;\r\n    }\r\n    let product = firebase.database().ref(\"products/\" + id);\r\n    product\r\n      .remove()\r\n      .then(function () {\r\n        const tempProducts = [...products];\r\n        tempProducts.splice(foundProductPos, 1);\r\n        setProducts([...tempProducts]);\r\n      })\r\n      .catch(function (error) {\r\n        alert(\r\n          `Failed to delete ${products[foundProductPos].name} \\n Error : ${error.message}. Please retry!`\r\n        );\r\n      });\r\n  }\r\n\r\n  async function editHandler(id) {\r\n    // let updateProduct = firebase.database().ref(\"products/\" + id);\r\n    const foundProduct = products.find((product) => product.id === id);\r\n    console.log(foundProduct);\r\n    if (foundProduct) {\r\n      setCurrentProduct({ ...foundProduct });\r\n    } else {\r\n      setCurrentProduct(null);\r\n    }\r\n  }\r\n\r\n  async function createProduct(product) {\r\n    firebase.database().ref(\"products\").push().set(product);\r\n  }\r\n\r\n  const updateProductField = (field, value) => {\r\n    const updatedProduct = {\r\n      ...currentProduct,\r\n      [field]: value,\r\n    };\r\n    setCurrentProduct(updatedProduct);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section className={`${classes.card}`}>\r\n        <p className={`${classes.title}`}>Add Product</p>\r\n        <ProductData\r\n          onSubmit={addProductHandler}\r\n          currentProduct={currentProduct}\r\n          updateProductField={updateProductField}\r\n        />\r\n      </section>\r\n      <section className={`${classes.card}`}>\r\n        <p className={`${classes.title} m-0`}>Products</p>\r\n        <Products\r\n          columns={columns}\r\n          rows={products}\r\n          onDeleteHandler={deleteHandler}\r\n          editHandler={editHandler}\r\n        />\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n","import firebase from 'firebase/app';\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyAfyaUQiwK9ujxMEiRCPqqub-OwOZUQjR8\",\r\n  authDomain: \"e-site-53120.firebaseapp.com\",\r\n  databaseURL: \"https://e-site-53120-default-rtdb.firebaseio.com\",\r\n  projectId: \"e-site-53120\",\r\n  storageBucket: \"e-site-53120.appspot.com\",\r\n  messagingSenderId: \"83053626633\",\r\n  appId: \"1:83053626633:web:e74c43517790e0cab7ffd8\"\r\n};\r\n\r\nconst app = firebase.initializeApp(config);\r\n\r\nexport default app;","import ProductList from \"./Components/Fetching&Storing/ProductList\";\nimport \"./firebase\";\n\nfunction App() {\n  return (\n    <main>\n      <ProductList />\n    </main>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n// ReactDOM.render(<App />,document.getElementById(\"root2\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}