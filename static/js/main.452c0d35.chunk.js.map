{"version":3,"sources":["Components/ProductData.js","Components/ProductDetails.js","Components/Product.js","Components/ProductList.js","App.js","index.js"],"names":["ProductData","onSubmit","useState","productName","setProductName","productPrice","setProductPrice","productDescription","setProductDescription","event","preventDefault","product","htmlFor","id","type","value","onChange","target","ProductDetails","props","name","amount","description","Product","map","prod","ProductList","setProduct","fetchProducts","useCallback","a","fetch","response","json","key","responseData","loadedProducts","push","method","body","JSON","stringify","useEffect","Fragment","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"iQAiEeA,EA/DK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAqCF,mBAAS,IAA9C,mBAAMG,EAAN,KAAmBC,EAAnB,KACA,EAAkDJ,mBAAS,IAA3D,mBAAOK,EAAP,KAA0BC,EAA1B,KAyCA,OACE,uBAAMP,SA5BgB,SAACQ,GACvBA,EAAMC,iBAMN,IAAMC,EAAU,CACdR,YAAaA,EACbE,aAAcA,EACdE,mBAAoBA,GAII,KAAxBI,EAAQR,aACiB,KAAzBQ,EAAQN,cACuB,KAA/BM,EAAQJ,qBAKVN,EAASU,GACTP,EAAe,IACfE,EAAgB,IAChBE,EAAsB,MAItB,UACE,gCACE,uBAAOI,QAAQ,OAAf,0BACA,uBAAOC,GAAG,OAAOC,KAAK,OAAOC,MAAOZ,EAAaa,SA3C5B,SAACP,GAC1BL,EAAeK,EAAMQ,OAAOF,aA4C1B,gCACE,uBAAOH,QAAQ,QAAf,2BACA,uBAAOC,GAAG,QAAQC,KAAK,OAAOC,MAAOV,EAAcW,SA3C7B,SAACP,GAC3BH,EAAgBG,EAAMQ,OAAOF,aA4C3B,gCACE,uBAAOH,QAAQ,cAAf,iCACA,uBAAOC,GAAG,cAAcC,KAAK,OAAOC,MAAOR,EAAoBS,SA3CnC,SAACP,GACjCD,EAAsBC,EAAMQ,OAAOF,aA4CjC,gDClDSG,EAVQ,SAACC,GACtB,OACE,+BACE,6BAAKA,EAAMC,OACX,6BAAKD,EAAME,SACX,6BAAKF,EAAMG,kBCcFC,EAjBC,SAAC,GAAe,IAAdZ,EAAa,EAAbA,QAChB,OACE,8BACE,6BACGA,EAAQa,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,CAEEL,KAAMK,EAAKL,KACXC,OAAQI,EAAKJ,OACbC,YAAaG,EAAKH,aAHbG,EAAKZ,YCsDPa,MAvDf,WACE,MAA8BxB,mBAAS,IAAvC,mBAAOS,EAAP,KAAgBgB,EAAhB,KAEMC,EAAgBC,sBAAW,sBAAC,kCAAAC,EAAA,sEACTC,MACrB,kEAF8B,cAC1BC,EAD0B,gBAILA,EAASC,OAJJ,OAUhC,IAAWC,KANLC,EAJ0B,OAQ5BC,EAAiB,GAEHD,EAChBC,EAAeC,KAAK,CAClBxB,GAAIqB,EACJd,KAAMe,EAAaD,GAAK/B,YACxBkB,OAAQc,EAAaD,GAAK7B,aAC1BiB,YAAaa,EAAaD,GAAK3B,qBAGnCoB,EAAWS,GAlBqB,2CAmBhC,IAtBmB,4CA4BrB,WAA+BzB,GAA/B,SAAAmB,EAAA,sEACyBC,MACrB,iEACA,CACEO,OAAQ,OACRC,KAAMC,KAAKC,UAAU9B,KAL3B,0DA5BqB,sBAwCrB,OAhBA+B,qBAAU,WACRd,MACA,CAACA,IAeD,eAAC,IAAMe,SAAP,WACE,kCACE,cAAC,EAAD,CAAa1C,SA3CE,gDA6CjB,kCACE,wBAAQ2C,QAAShB,EAAjB,qCAEF,kCACE,cAAC,EAAD,CAASjB,QAASA,UC1CXkC,MAXf,WACE,OACE,8BACE,mCACE,0CACA,cAAC,EAAD,UCFRC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.452c0d35.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst ProductData = ({ onSubmit }) => {\r\n  const [productName,setProductName] =useState('');\r\n  const[productPrice,setProductPrice] =useState('');\r\n  const [productDescription,setProductDescription] =useState('');\r\n\r\n  const productNameHandler = (event)=>{\r\n    setProductName(event.target.value);\r\n  }\r\n\r\n  const productPriceHandler = (event)=>{\r\n    setProductPrice(event.target.value);\r\n  }\r\n\r\n  const productDescriptionHandler = (event)=>{\r\n    setProductDescription(event.target.value);\r\n  }\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    //   console.log(productName.current.value);\r\n    //   console.log(productPrice.current.value);\r\n    //   console.log(productDescription.current.value);\r\n    \r\n\r\n    const product = {\r\n      productName: productName,\r\n      productPrice: productPrice,\r\n      productDescription: productDescription,\r\n    };\r\n\r\n    if (\r\n      product.productName === \"\" ||\r\n      product.productPrice === \"\" ||\r\n      product.productDescription === \"\"\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    onSubmit(product);\r\n    setProductName('');\r\n    setProductPrice('');\r\n    setProductDescription('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmitHandler}>\r\n      <div>\r\n        <label htmlFor=\"name\">Product name</label>\r\n        <input id=\"name\" type=\"text\" value={productName} onChange={productNameHandler}/>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"price\">Product price</label>\r\n        <input id=\"price\" type=\"text\" value={productPrice} onChange={productPriceHandler}/>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"description\">Product description</label>\r\n        <input id=\"description\" type=\"text\" value={productDescription} onChange={productDescriptionHandler}/>\r\n      </div>\r\n      <button>Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProductData;\r\n","const ProductDetails = (props) => {\r\n  return (\r\n    <li>\r\n      <h3>{props.name}</h3>\r\n      <h3>{props.amount}</h3>\r\n      <h3>{props.description}</h3>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ProductDetails;\r\n","// import classes from './Product.module.css'\r\nimport ProductDetails from \"./ProductDetails\";\r\nconst Product = ({product}) => {\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {product.map((prod) => (\r\n          <ProductDetails\r\n            key={prod.id}\r\n            name={prod.name}\r\n            amount={prod.amount}\r\n            description={prod.description}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\n// import Product from \"./Product\";\r\n\r\nimport React from \"react\";\r\nimport ProductData from \"./ProductData\";\r\nimport Product from \"./Product\";\r\n\r\nfunction ProductList() {\r\n  const [product, setProduct] = useState([]);\r\n\r\n  const fetchProducts = useCallback(async () => {\r\n    const response = await fetch(\r\n      \"https://e-site-53120-default-rtdb.firebaseio.com/products.json\"\r\n    );\r\n    const responseData = await response.json();\r\n    // console.log(responseData);\r\n\r\n\r\n    let loadedProducts = [];\r\n\r\n    for (const key in responseData) {\r\n      loadedProducts.push({\r\n        id: key,\r\n        name: responseData[key].productName,\r\n        amount: responseData[key].productPrice,\r\n        description: responseData[key].productDescription,\r\n      });\r\n    }\r\n    setProduct(loadedProducts);\r\n  },[]);\r\n\r\n  useEffect(()=>{\r\n    fetchProducts();\r\n  },[fetchProducts]);\r\n\r\n  async function onSubmitHandler(product) {\r\n    const response = await fetch(\r\n      \"https://e-site-53120-default-rtdb.firebaseio.com/products.json\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify(product),\r\n      }\r\n    );\r\n    // const data = await response.json();\r\n    // // console.log(data);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section>\r\n        <ProductData onSubmit={onSubmitHandler} />\r\n      </section>\r\n      <section>\r\n        <button onClick={fetchProducts}>Fetch Latest Products</button>\r\n      </section>\r\n      <section>\r\n        <Product product={product} />\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n","import \"./App.css\";\nimport ProductList from \"./Components/ProductList\";\n\nfunction App() {\n  return (\n    <div>\n      <header>\n        <h1>Products</h1>\n        <ProductList/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n// ReactDOM.render(<App />,document.getElementById(\"root2\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}