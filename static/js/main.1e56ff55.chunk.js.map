{"version":3,"sources":["Components/Button/Button.js","Components/Fetching&Storing/ProductData.js","Components/Fetching&Storing/Products.js","Components/Fetching&Storing/ProductList.js","App.js","index.js"],"names":["Button","props","onClick","onFetch","children","ProductData","onSubmit","useState","productName","setProductName","productPrice","setProductPrice","productDescription","setProductDescription","event","preventDefault","product","htmlFor","id","type","value","onChange","target","Product","name","amount","description","onDeleteHandler","bind","Products","dataSet","striped","bordered","hover","columns","map","column","rows","prod","ProductList","products","setProducts","fetchProducts","useCallback","a","fetch","response","json","key","responseData","loadedProducts","push","console","log","method","deleteData","result","body","JSON","stringify","useEffect","Fragment","App","ReactDOM","render","document","getElementById"],"mappings":"iQAIeA,EAJA,SAACC,GACd,OAAO,wBAAQC,QAASD,EAAME,QAAvB,SAAiCF,EAAMG,YCiEjCC,EA/DK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAqCF,mBAAS,IAA9C,mBAAMG,EAAN,KAAmBC,EAAnB,KACA,EAAkDJ,mBAAS,IAA3D,mBAAOK,EAAP,KAA0BC,EAA1B,KAyCA,OACE,uBAAMP,SA5BgB,SAACQ,GACvBA,EAAMC,iBAMN,IAAMC,EAAU,CACdR,YAAaA,EACbE,aAAcA,EACdE,mBAAoBA,GAII,KAAxBI,EAAQR,aACiB,KAAzBQ,EAAQN,cACuB,KAA/BM,EAAQJ,qBAKVN,EAASU,GACTP,EAAe,IACfE,EAAgB,IAChBE,EAAsB,MAItB,UACE,gCACE,uBAAOI,QAAQ,OAAf,0BACA,uBAAOC,GAAG,OAAOC,KAAK,OAAOC,MAAOZ,EAAaa,SA3C5B,SAACP,GAC1BL,EAAeK,EAAMQ,OAAOF,aA4C1B,gCACE,uBAAOH,QAAQ,QAAf,2BACA,uBAAOC,GAAG,QAAQC,KAAK,OAAOC,MAAOV,EAAcW,SA3C7B,SAACP,GAC3BH,EAAgBG,EAAMQ,OAAOF,aA4C3B,gCACE,uBAAOH,QAAQ,cAAf,iCACA,uBAAOC,GAAG,cAAcC,KAAK,OAAOC,MAAOR,EAAoBS,SA3CnC,SAACP,GACjCD,EAAsBC,EAAMQ,OAAOF,aA4CjC,cAAC,EAAD,yB,QCzDAG,EAAU,SAACtB,GACf,OACE,qCACE,6BAAKA,EAAMuB,OACX,6BAAKvB,EAAMwB,SACX,6BAAKxB,EAAMyB,cACX,+BACE,cAAC,EAAD,mBADF,IAEE,cAAC,EAAD,CAAQvB,QAASF,EAAM0B,gBAAgBC,K,UAAW3B,EAAMiB,IAAxD,2BAmCOW,EA3BE,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASH,EAAsB,EAAtBA,gBAC3B,OACE,eAAC,IAAD,CAAsBI,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA5C,UACE,gCACE,6BACGH,EAAQI,QAAQC,KAAI,SAACC,EAAQlB,GAAT,OACnB,6BAAckB,GAALlB,UAIf,gCACGY,EAAQO,KAAKF,KAAI,SAACG,GAAD,OAChB,6BACE,cAAC,EAAD,CACEpB,GAAIoB,EAAKpB,GACTM,KAAMc,EAAKd,KACXC,OAAQa,EAAKb,OACbC,YAAaY,EAAKZ,YAClBC,gBAAmBA,KANdW,EAAKpB,aCoDTqB,MA7Ef,WACE,MAAgChC,mBAAS,IAAzC,mBAAOiC,EAAP,KAAiBC,EAAjB,KASMC,EAAgBC,sBAAW,sBAAC,kCAAAC,EAAA,sEACTC,MACrB,kEAF8B,cAC1BC,EAD0B,gBAILA,EAASC,OAJJ,OAShC,IAAWC,KALLC,EAJ0B,OAO5BC,EAAiB,GAEHD,EAChBC,EAAeC,KAAK,CAClBjC,GAAI8B,EACJxB,KAAMyB,EAAaD,GAAKxC,YACxBiB,OAAQwB,EAAaD,GAAKtC,aAC1BgB,YAAauB,EAAaD,GAAKpC,qBAGnC6B,EAAYS,GAjBoB,2CAkB/B,IA5BkB,4CAkCrB,WAA6BhC,GAA7B,iBAAA0B,EAAA,6DACEQ,QAAQC,IAAInC,GADd,SAE2B2B,MACvB,iEAAmE3B,EACnE,CACEoC,OAAQ,WALd,cAEQC,EAFR,gBASuBA,EAAWR,OATlC,OASQS,EATR,OAUEJ,QAAQC,IAAIG,GAVd,4CAlCqB,kEA+CrB,WAA+BhB,GAA/B,SAAAI,EAAA,sEACyBC,MACrB,iEACA,CACES,OAAQ,OACRG,KAAMC,KAAKC,UAAUnB,KAL3B,0DA/CqB,sBA2DrB,OA7BAoB,qBAAU,WACRlB,MACC,CAACA,IA4BF,eAAC,IAAMmB,SAAP,WACE,kCACE,cAAC,EAAD,CAAavD,SA9DE,gDAgEjB,kCACE,cAAC,EAAD,CAAQH,QAASuC,EAAjB,qCAEF,kCACE,cAAC,EAAD,CACEZ,QAAS,CAAEI,QAlEH,CACd,eACA,gBACA,sBACA,UA8D0BG,KAAMG,GAC1Bb,gBAtEa,oDCORmC,MAXf,WACE,OACE,8BACE,mCACE,0CACA,cAAC,EAAD,U,MCDRC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1e56ff55.chunk.js","sourcesContent":["const Button = (props) => {\r\n  return <button onClick={props.onFetch}>{props.children}</button>;\r\n};\r\n\r\nexport default Button;\r\n","import { useState } from \"react\";\r\nimport Button from \"../Button/Button\";\r\n\r\nconst ProductData = ({ onSubmit }) => {\r\n  const [productName,setProductName] =useState('');\r\n  const[productPrice,setProductPrice] =useState('');\r\n  const [productDescription,setProductDescription] =useState('');\r\n\r\n  const productNameHandler = (event)=>{\r\n    setProductName(event.target.value);\r\n  }\r\n\r\n  const productPriceHandler = (event)=>{\r\n    setProductPrice(event.target.value);\r\n  }\r\n\r\n  const productDescriptionHandler = (event)=>{\r\n    setProductDescription(event.target.value);\r\n  }\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    //   console.log(productName.current.value);\r\n    //   console.log(productPrice.current.value);\r\n    //   console.log(productDescription.current.value);\r\n    \r\n\r\n    const product = {\r\n      productName: productName,\r\n      productPrice: productPrice,\r\n      productDescription: productDescription,\r\n    };\r\n\r\n    if (\r\n      product.productName === \"\" ||\r\n      product.productPrice === \"\" ||\r\n      product.productDescription === \"\"\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    onSubmit(product);\r\n    setProductName('');\r\n    setProductPrice('');\r\n    setProductDescription('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmitHandler}>\r\n      <div>\r\n        <label htmlFor=\"name\">Product name</label>\r\n        <input id=\"name\" type=\"text\" value={productName} onChange={productNameHandler}/>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"price\">Product price</label>\r\n        <input id=\"price\" type=\"text\" value={productPrice} onChange={productPriceHandler}/>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"description\">Product description</label>\r\n        <input id=\"description\" type=\"text\" value={productDescription} onChange={productDescriptionHandler}/>\r\n      </div>\r\n      <Button>Submit</Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProductData;\r\n","// import classes from './Product.module.css'\r\nimport Button from '../Button/Button';\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\n\r\nconst Product = (props) => {\r\n  return (\r\n    <>\r\n      <td>{props.name}</td>\r\n      <td>{props.amount}</td>\r\n      <td>{props.description}</td>\r\n      <td>\r\n        <Button>edit</Button>/\r\n        <Button onFetch={props.onDeleteHandler.bind(this, props.id)}>\r\n          delete\r\n        </Button>\r\n      </td>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Products = ({ dataSet, onDeleteHandler }) => {\r\n  return (\r\n    <ReactBootStrap.Table striped bordered hover>\r\n      <thead>\r\n        <tr>\r\n          {dataSet.columns.map((column, id) => (\r\n            <th key={id}>{column}</th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {dataSet.rows.map((prod) => (\r\n          <tr key={prod.id}>\r\n            <Product\r\n              id={prod.id}\r\n              name={prod.name}\r\n              amount={prod.amount}\r\n              description={prod.description}\r\n              onDeleteHandler = {onDeleteHandler}\r\n            />\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </ReactBootStrap.Table>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\n// import Product from \"./Product\";\r\n\r\nimport React from \"react\";\r\nimport ProductData from \"./ProductData\";\r\nimport Products from \"./Products\";\r\nimport Button from \"../Button/Button\";\r\nfunction ProductList() {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const columns = [\r\n    \"Product Name\",\r\n    \"Product Price\",\r\n    \"Product Description\",\r\n    \"Action\",\r\n  ];\r\n\r\n  const fetchProducts = useCallback(async () => {\r\n    const response = await fetch(\r\n      \"https://e-site-53120-default-rtdb.firebaseio.com/products.json\"\r\n    );\r\n    const responseData = await response.json();\r\n    // console.log(responseData);\r\n\r\n    let loadedProducts = [];\r\n\r\n    for (const key in responseData) {\r\n      loadedProducts.push({\r\n        id: key,\r\n        name: responseData[key].productName,\r\n        amount: responseData[key].productPrice,\r\n        description: responseData[key].productDescription,\r\n      });\r\n    }\r\n    setProducts(loadedProducts);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, [fetchProducts]);\r\n\r\n  async function deleteHandler(id) {\r\n    console.log(id);\r\n    const deleteData = await fetch(\r\n      \"https://e-site-53120-default-rtdb.firebaseio.com/products.json\" + id,\r\n      {\r\n        method: \"DELETE\",\r\n        // body: JSON.stringify(products),\r\n      }\r\n    );\r\n    const result = await deleteData.json();\r\n    console.log(result);\r\n  }\r\n\r\n  async function onSubmitHandler(products) {\r\n    const response = await fetch(\r\n      \"https://e-site-53120-default-rtdb.firebaseio.com/products.json\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify(products),\r\n      }\r\n    );\r\n    // const data = await response.json();\r\n    // // console.log(data);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section>\r\n        <ProductData onSubmit={onSubmitHandler} />\r\n      </section>\r\n      <section>\r\n        <Button onFetch={fetchProducts}>Fetch Latest Products</Button>\r\n      </section>\r\n      <section>\r\n        <Products\r\n          dataSet={{ columns, rows: products }}\r\n          onDeleteHandler={deleteHandler}\r\n        />\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n","import \"./App.css\";\nimport ProductList from './Components/Fetching&Storing/ProductList'\n\nfunction App() {\n  return (\n    <div>\n      <header>\n        <h1>Products</h1>\n        <ProductList/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n// ReactDOM.render(<App />,document.getElementById(\"root2\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}